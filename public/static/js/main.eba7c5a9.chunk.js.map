{"version":3,"sources":["components/DartsScorer/HeaderPlayer.js","components/DartsScorer/StatsBox.js","components/DartsScorer/Header.js","components/DartsScorer/MarkboardRow.js","components/DartsScorer/Markboard.js","components/DartsScorer/CurrentTurn.js","components/DartsScorer/logic.js","components/DartsScorer/index.js","components/SocketProvider/index.js","serviceWorker.js","index.js"],"names":["HeaderPlayer","side","active","score","isWinner","name","setName","classNames","className","type","onChange","e","target","value","StatsBox","p0","p1","mpr","toFixed","hitRate","Header","state","setNames","complete","winner","currentThrow","players","points","names","legs","stats","markDisplay","marks","MarkboardButtons","m0","m1","clickDart","sector","onClick","multiple","display","MarkboardRow","props","activePlayer","Markboard","map","sectorValue","idx","key","DartsScorerBox","dart","undefined","CurrentTurn","isComplete","nextLeg","darts","eraseDart","undoTurn","confirmTurn","length","calculatePlayerScore","playerMarks","reduce","mem","Math","max","DartsScorer","React","useState","tx","firstThrow","turns","hits","pastTurns","matchState","_setMatchState","currentTurn","setCurrentTurn","setMatchState","newState","JSON","parse","stringify","sendToMirror","useEffect","keyHandler","event","confirmTurnHandler","preventDefault","eraseDartHandler","window","addEventListener","removeEventListener","slice","turn","miss","match","currentPlayer","opponent","effectiveMarks","min","addTurnStats","every","applyTurn","n1","n2","concat","pop","forEach","undoTurnStats","undoneTurn","filter","SocketProvider","roomCode","socket","setSocket","setState","io","emit","on","data","Boolean","location","hostname","pathname","split","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eba7c5a9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HeaderPlayer = ({ side, active, score, isWinner, name, setName }) => {\n  let classNames = \"darts-scorer-player\";\n  if (active) {\n    classNames += \" darts-scorer-player-active\";\n  }\n  if (isWinner) {\n    classNames += \" darts-scorer-player-winner\";\n  }\n\n  return (\n    <div className={classNames}>\n      <input className=\"darts-scorer-player-name\" type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n      <div className=\"darts-scorer-player-score\">{score}</div>\n    </div>\n  );\n};\n\nexport default HeaderPlayer;\n","import React from \"react\";\n\nconst StatsBox = ({ p0, p1 }) => {\n  return (\n    <div className=\"darts-scorer-statsbox\">\n      <div className=\"darts-scorer-statsbox-row\">\n        <div className=\"darts-scorer-statsbox-number\">{p0.mpr.toFixed(2)}</div>\n        <div className=\"darts-scorer-statsbox-label\">MPR</div>\n        <div className=\"darts-scorer-statsbox-number\">{p1.mpr.toFixed(2)}</div>\n      </div>\n      <div className=\"darts-scorer-statsbox-row\">\n        <div className=\"darts-scorer-statsbox-number\">{(p0.hitRate * 100).toFixed(2) + \"%\"}</div>\n        <div className=\"darts-scorer-statsbox-label\">Hit %</div>\n        <div className=\"darts-scorer-statsbox-number\">{(p1.hitRate * 100).toFixed(2) + \"%\"}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsBox;\n","import React from \"react\";\nimport HeaderPlayer from \"./HeaderPlayer\";\nimport StatsBox from \"./StatsBox\";\n\nconst Header = ({ state, setNames }) => {\n  return (\n    <div className=\"darts-scorer-header\">\n      <HeaderPlayer\n        isWinner={state.complete && state.winner === 0}\n        side={0}\n        active={state.currentThrow === 0}\n        score={state.players[0].points}\n        name={state.names[0]}\n        setName={(name) => {\n          setNames(name, state.names[1]);\n        }}\n      />\n      <HeaderPlayer\n        isWinner={state.complete && state.winner === 1}\n        side={1}\n        active={state.currentThrow === 1}\n        score={state.players[1].points}\n        name={state.names[1]}\n        setName={(name) => {\n          setNames(state.names[0], name);\n        }}\n      />\n      {state.legs[0] || state.legs[1] ? (\n        <div className=\"darts-scorer-header-legs\">\n          {state.legs[0]} - {state.legs[1]}\n        </div>\n      ) : null}\n      <StatsBox p0={state.stats[0]} p1={state.stats[1]} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst markDisplay = (marks) => {\n  switch (marks) {\n    case 0:\n      return \"\";\n    case 1:\n      return \"/\";\n    case 2:\n      return \"X\";\n    default:\n      return \"O\";\n  }\n};\n\nconst MarkboardButtons = ({ m0, m1, name, clickDart, sector }) => {\n  if (m0 >= 3 && m1 >= 3) {\n    return <div className=\"darts-scorer-markboard-row-closed\">{name}</div>;\n  }\n\n  return (\n    <div className=\"darts-scorer-markboard-row-open\">\n      <button\n        className=\"darts-scorer-markboard-button darts-scorer-markboard-button-single\"\n        onClick={() => {\n          clickDart({ sector, multiple: 1, display: `${name}` });\n        }}\n      >{`${name}`}</button>\n\n      <button\n        className=\"darts-scorer-markboard-button darts-scorer-markboard-button-double\"\n        onClick={() => {\n          clickDart({ sector, multiple: 2, display: `D${name}` });\n        }}\n      >{`D${name}`}</button>\n\n      {name !== \"B\" && (\n        <button\n          className=\"darts-scorer-markboard-button darts-scorer-markboard-button-triple\"\n          onClick={() => {\n            clickDart({ sector, multiple: 3, display: `T${name}` });\n          }}\n        >{`T${name}`}</button>\n      )}\n    </div>\n  );\n};\n\nconst MarkboardRow = (props) => {\n  const { m0, m1, activePlayer } = props;\n  return (\n    <div className=\"darts-scorer-markboard-row\">\n      <div className={`darts-scorer-markboard-marks ${activePlayer === 0 ? \"darts-scorer-markboard-active\" : \"\"}`}>\n        {markDisplay(m0)}\n      </div>\n      <div className=\"darts-scorer-markboard-row-internal\">\n        <MarkboardButtons {...props} />\n      </div>\n      <div className={`darts-scorer-markboard-marks ${activePlayer === 1 ? \"darts-scorer-markboard-active\" : \"\"}`}>\n        {markDisplay(m1)}\n      </div>\n    </div>\n  );\n};\n\nexport default MarkboardRow;\n","import React from \"react\";\nimport MarkboardRow from \"./MarkboardRow\";\n\nconst Markboard = ({ state, clickDart }) => {\n  return (\n    <div className=\"darts-scorer-markboard\">\n      {[20, 19, 18, 17, 16, 15, \"B\"].map((sectorValue, idx) => {\n        return (\n          <MarkboardRow\n            key={idx}\n            sector={idx}\n            name={sectorValue}\n            m0={state.players[0].marks[idx]}\n            m1={state.players[1].marks[idx]}\n            clickDart={clickDart}\n            activePlayer={state.currentThrow}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Markboard;\n","import React from \"react\";\n\nconst DartsScorerBox = ({ dart }) => {\n  if (dart === undefined) {\n    return <div className=\"darts-scorer-current-turn-box\"></div>;\n  }\n\n  let classNames = \"darts-scorer-current-turn-box \";\n  switch (dart.multiple) {\n    case 1:\n      classNames += \"darts-scorer-current-turn-box-single\";\n      break;\n\n    case 2:\n      classNames += \"darts-scorer-current-turn-box-double\";\n      break;\n\n    default:\n      classNames += \"darts-scorer-current-turn-box-triple\";\n      break;\n  }\n\n  return <div className={classNames}>{dart.display}</div>;\n};\n\nconst CurrentTurn = ({ isComplete, nextLeg, darts, eraseDart, undoTurn, confirmTurn }) => {\n  if (isComplete) {\n    return (\n      <div className=\"darts-scorer-current-turn-container\">\n        <button className=\"darts-scorer-current-turn-erase\" onClick={undoTurn}>\n          Undo\n        </button>\n\n        <button className=\"darts-scorer-current-turn-next\" onClick={nextLeg}>\n          Next Leg\n        </button>\n      </div>\n    );\n  }\n  return (\n    <div className=\"darts-scorer-current-turn-container\">\n      {darts.length > 0 && (\n        <button className=\"darts-scorer-current-turn-erase\" onClick={eraseDart}>\n          Erase\n        </button>\n      )}\n      {darts.length === 0 && (\n        <button className=\"darts-scorer-current-turn-erase\" onClick={undoTurn}>\n          Undo\n        </button>\n      )}\n      <div className=\"darts-scorer-current-turn-boxes\">\n        <DartsScorerBox dart={darts[0]} />\n        <DartsScorerBox dart={darts[1]} />\n        <DartsScorerBox dart={darts[2]} />\n      </div>\n      <button className=\"darts-scorer-current-turn-confirm\" onClick={confirmTurn}>\n        Confirm\n      </button>\n    </div>\n  );\n};\n\nexport default CurrentTurn;\n","const newStatePlayer = () => ({\n  points: 0,\n  marks: [0, 0, 0, 0, 0, 0, 0],\n});\n\nconst newStateStats = () => ({\n  turns: 0,\n  hits: 0,\n  marks: 0,\n  mpr: 0,\n  hitRate: 0,\n});\n\nexport const newMatchState = () => ({\n  tx: 0,\n  legs: [0, 0],\n  firstThrow: 0,\n  currentThrow: 0,\n  players: [newStatePlayer(), newStatePlayer()],\n  stats: [newStateStats(), newStateStats()],\n  names: [\"Player 1\", \"Player 2\"],\n  pastTurns: [],\n});\n\nexport const setNames = (match, n1, n2) => {\n  match.names = [n1, n2];\n  match.tx = match.tx + 1;\n  return match;\n};\n\nconst calculatePlayerScore = (playerMarks) => {\n  return [20, 19, 18, 17, 16, 15, 25].reduce((mem, sectorValue, idx) => {\n    return mem + Math.max(0, playerMarks[idx] - 3) * sectorValue;\n  }, 0);\n};\n\nconst isWinner = (currentPlayer, opponent) => {\n  return currentPlayer.points >= opponent.points && currentPlayer.marks.every((sector) => sector >= 3);\n};\n\nconst addTurnStats = (stats, turn) => {\n  const turns = stats.turns + 1;\n  const hits = turn.reduce((mem, dart) => {\n    if (dart.miss || dart.effectiveMarks === 0) {\n      return mem;\n    }\n\n    return mem + 1;\n  }, stats.hits);\n\n  const marks = turn.reduce((mem, dart) => {\n    if (dart.miss) {\n      return mem;\n    }\n\n    return mem + dart.effectiveMarks;\n  }, stats.marks);\n\n  return {\n    turns,\n    hits,\n    marks,\n    mpr: marks / turns,\n    hitRate: hits / (turns * 3),\n  };\n};\n\nconst undoTurnStats = (stats, turn) => {\n  const turns = stats.turns - 1;\n  const hits = turn.reduce((mem, dart) => {\n    if (dart.miss || dart.effectiveMarks === 0) {\n      return mem;\n    }\n\n    return mem - 1;\n  }, stats.hits);\n\n  const marks = turn.reduce((mem, dart) => {\n    if (dart.miss) {\n      return mem;\n    }\n\n    return mem - dart.effectiveMarks;\n  }, stats.marks);\n\n  return {\n    turns,\n    hits,\n    marks,\n    mpr: marks / turns || 0,\n    hitRate: hits / (turns * 3) || 0,\n  };\n};\n\nexport const applyTurn = (match, turn) => {\n  match.tx += 1;\n  const currentPlayer = match.players[match.currentThrow];\n  const opponent = match.players[(match.currentThrow + 1) % 2];\n  turn = turn.map((dart) => {\n    if (dart.miss) {\n      return dart;\n    }\n\n    if (opponent.marks[dart.sector] >= 3) {\n      dart.effectiveMarks = Math.min(3 - currentPlayer.marks[dart.sector], dart.multiple);\n      currentPlayer.marks[dart.sector] = Math.min(3, currentPlayer.marks[dart.sector] + dart.multiple);\n    } else {\n      dart.effectiveMarks = dart.multiple;\n      currentPlayer.marks[dart.sector] = currentPlayer.marks[dart.sector] + dart.multiple;\n    }\n\n    return dart;\n  });\n\n  currentPlayer.points = calculatePlayerScore(currentPlayer.marks);\n\n  match.stats[match.currentThrow] = addTurnStats(match.stats[match.currentThrow], turn);\n  match.pastTurns = [...match.pastTurns, turn];\n\n  if (isWinner(currentPlayer, opponent)) {\n    match.winner = match.currentThrow;\n    match.legs[match.winner] += 1;\n    match.complete = true;\n    return match;\n  }\n\n  match.players[match.currentThrow] = currentPlayer;\n  match.currentThrow = (match.currentThrow + 1) % 2;\n  return match;\n};\n\nexport const nextLegState = (match) => {\n  match.tx += 1;\n  match.players = [newStatePlayer(), newStatePlayer()];\n  match.firstThrow = match.currentThrow = (match.firstThrow + 1) % 2;\n  match.complete = false;\n  match.winner = undefined;\n  match.pastTurns = [];\n  return match;\n};\n\nexport const undoTurn = (match) => {\n  const turn = match.pastTurns.pop();\n  if (!turn) {\n    return { turn: [], state: match };\n  }\n\n  match.tx += 1;\n\n  match.currentThrow = (match.currentThrow + 1) % 2;\n  if (match.complete) {\n    match.currentThrow = (match.currentThrow + 1) % 2;\n    match.complete = false;\n    match.legs[match.winner] -= 1;\n    match.winner = undefined;\n  }\n\n  const currentPlayer = match.players[match.currentThrow];\n\n  turn.forEach((dart) => {\n    if (dart.miss) {\n      return;\n    }\n\n    currentPlayer.marks[dart.sector] = currentPlayer.marks[dart.sector] - dart.effectiveMarks;\n  });\n\n  currentPlayer.points = calculatePlayerScore(currentPlayer.marks);\n  match.stats[match.currentThrow] = undoTurnStats(match.stats[match.currentThrow], turn);\n\n  const undoneTurn = turn\n    .filter((dart) => !dart.miss)\n    .map(({ sector, multiple, display }) => ({ sector, multiple, display }));\n\n  match.players[match.currentThrow] = currentPlayer;\n  return {\n    turn: undoneTurn,\n    state: match,\n  };\n};\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Markboard from \"./Markboard\";\nimport CurrentTurn from \"./CurrentTurn\";\nimport { newMatchState, nextLegState, applyTurn, undoTurn, setNames } from \"./logic\";\n\nimport \"./index.css\";\n\nconst DartsScorer = (props) => {\n  const [matchState, _setMatchState] = React.useState(props.state || newMatchState());\n  const [currentTurn, setCurrentTurn] = React.useState([]);\n\n  const setMatchState = (state) => {\n    const newState = JSON.parse(JSON.stringify(state));\n    _setMatchState(newState);\n    props.sendToMirror(newState);\n  };\n\n  React.useEffect(() => {\n    props.state && _setMatchState(props.state);\n  }, [props]);\n\n  React.useEffect(() => {\n    const keyHandler = (event) => {\n      switch (event.key) {\n        case \"Enter\":\n          confirmTurnHandler();\n          event.preventDefault();\n          break;\n\n        case \"Backspace\":\n          eraseDartHandler();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener(\"keydown\", keyHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", keyHandler);\n    };\n  }, [matchState, currentTurn]);\n\n  const clickDartHander = (dart) => {\n    if (matchState.complete) {\n      return;\n    }\n    if (currentTurn.length < 3) {\n      setCurrentTurn(currentTurn.concat(dart));\n    }\n  };\n\n  const undoTurnHandler = () => {\n    const { state, turn } = undoTurn(matchState);\n    setMatchState(state);\n    setCurrentTurn(turn);\n  };\n\n  const eraseDartHandler = () => {\n    if (matchState.complete) {\n      return;\n    }\n    setCurrentTurn(currentTurn.slice(0, -1));\n  };\n\n  const confirmTurnHandler = () => {\n    if (matchState.complete) {\n      return;\n    }\n\n    const turn = [{ miss: true }, { miss: true }, { miss: true }].map((miss, idx) => {\n      return currentTurn[idx] || miss;\n    });\n\n    setMatchState(applyTurn(matchState, turn));\n    setCurrentTurn([]);\n  };\n\n  const nextLegHandler = () => {\n    setMatchState(nextLegState(matchState));\n    setCurrentTurn([]);\n  };\n\n  const setNamesHandler = (n1, n2) => {\n    setMatchState(setNames(matchState, n1, n2));\n  };\n\n  return (\n    <div className=\"darts-scorer-container\">\n      <Header state={matchState} setNames={setNamesHandler} />\n      <Markboard state={matchState} clickDart={clickDartHander} />\n      <CurrentTurn\n        isComplete={matchState.complete}\n        darts={currentTurn}\n        undoTurn={undoTurnHandler}\n        eraseDart={eraseDartHandler}\n        confirmTurn={confirmTurnHandler}\n        nextLeg={nextLegHandler}\n      />\n    </div>\n  );\n};\n\nexport default DartsScorer;\n","import React from \"react\";\nimport io from \"socket.io-client\";\nimport DartsScorer from \"../DartsScorer\";\n\nconst SocketProvider = ({ roomCode }) => {\n  const [socket, setSocket] = React.useState(null);\n  const [state, setState] = React.useState(null);\n\n  React.useEffect(() => {\n    const socket = io();\n    socket.emit(\"join\", roomCode);\n\n    socket.on(\"state\", (data) => {\n      setState(data);\n    });\n\n    setSocket(socket);\n  }, [roomCode]);\n\n  const sendToMirror = (state) => {\n    socket.emit(\"state\", { state, roomCode });\n  };\n\n  return <DartsScorer sendToMirror={sendToMirror} state={state} />;\n};\n\nexport default SocketProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SocketProvider from \"./components/SocketProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst roomCode = window.location.pathname.split(\"/\")[2];\n\nReactDOM.render(\n  <div className=\"container\">\n    <SocketProvider roomCode={roomCode} />\n  </div>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}